# Remover objetos de la sesi?n de trabajo
rm(list = ls())
# habilitar paquetes ggplot2
library(readxl) # Paquete para importar datos desde excel
library(tidyr) # Paquete para manipular datos
library(dplyr) # Paquete para manipular datos
library(ggplot2) # Paquete para hacer lindos gráficos en R
library(psych) # Graficas de correlación
# Importa base de datos de CT de HK gene de Nogal en formato MESSY
messy <- hkg_nogal <- read_excel("hkg_nogal.xlsx",
col_types = c("text", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
knitr::opts_chunk$set(echo = FALSE)
library(readxl) # Paquete para importar datos desde excel
library(ggplot2)
library(UsingR)
library(dplyr)
ibrary(psych) # Graficas de correlación
knitr::opts_chunk$set(echo = FALSE)
library(readxl) # Paquete para importar datos desde excel
library(ggplot2)
library(UsingR)
library(dplyr)
library(psych) # Graficas de correlación
# Importa base de datos de CT de HK gene de Nogal en formato MESSY
messy <- hkg_nogal <- read_excel("hkg_nogal.xlsx",
col_types = c("text", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
# Importa base de datos de CT de HK gene de Nogal en formato MESSY
messy <- hkg_nogal <- read_excel("hkg_nogal.xlsx",
col_types = c("text", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
head(messy)  # Muestra los primeros datos del data set
summary(messy)
# Correlación entre muestras
cor(messy[3:9], method = "pearson")
pairs.panels(messy[3:9])
# Importa base de datos de CT de HK gene de Nogal en formato MESSY
messy <- hkg_nogal <- read_excel("hkg_nogal.xlsx",
col_types = c("text", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
head(messy)  # Muestra los primeros datos del data set
summary(messy)
# Correlación entre muestras
pairs.panels(messy[3:4])
# Importa base de datos de CT de HK gene de Nogal en formato MESSY
nogal <- hkg_nogal <- read_excel("hkg_nogal.xlsx",
col_types = c("text", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
head(nogal)  # Muestra los primeros datos del data set
summary(nogal)
# Correlación entre muestras
pairs.panels(nogal[3:4])
# Importa base de datos de CT de HK gene de Nogal en formato MESSY
nogal <- hkg_nogal <- read_excel("hkg_nogal.xlsx",
col_types = c("text", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
head(nogal)  # Muestra los primeros datos del data set
summary(nogal)
# Correlación entre muestras
pairs.panels(nogal[3:4])
cor.test(nogal$`18S rRNA`, nogal$GAPDH)
cor.test(nogal$`18S rRNA`, nogal$GAPDH,
method = "pearson",
alternative = "two.sided")
#create density plots
curve(dt(x, df=6), from=-5, to=5, col='blue', ylab = 'Density', xlab = "t-values")
curve(dt(x, df=10), from=-5, to=5, col='red', add=TRUE)
curve(dt(x, df=30), from=-5, to=5, col='green', add=TRUE)
#add legend
legend(-5, .3, legend=c("df=6", "df=10", "df=30"),
col=c("blue", "red", "green"), lty=1, cex=1.2)
curve(dt(x, df=1076), from=-5, to=5, col='blue', ylab = 'Density', xlab = "t-values")
abline(v=qt(0.975, df=1076),lty= 2, col = 'blue')
abline(v= - qt(0.975, df=1076),lty= 2, col = 'blue')
text(3.28, 0.135, "t-obs. = 19,006")
arrows(x0 = 3.28,
y0 = 0.1,
x1 = 5.28,
y1 = 0.04)
text(0, 0.135, "No rechaza", col="blue")
text(-3.5, 0.35, "Rechaza H0", col="red")
text(3.5, 0.35, "Rechaza H0", col="red")
knitr::include_graphics("t-student.png")
setwd("~/Dropbox/VINCULACION CON EL MEDIO/AEA/2022/Curso_Expresion_Genes/GeneExpression_2022/Clase_10")
library(readxl)
dat_Arabidopsis <- read_excel("dat_Arabidopsis.xlsx")
View(dat_Arabidopsis)
Arabidopsis <- read_excel("dat_Arabidopsis.xlsx")
View(Arabidopsis)
summary(Arabidopsis)
ggplot(Arabidopsis, aes(x=Sample, y=ΔCt , fill=Sample))+
geom_boxplot()+
labs(title="Boxplot de ct", x="Gen", y="Ct")
Arabidopsis <- read_excel("dat_Arabidopsis.xlsx")
summary(Arabidopsis)
ggplot(Arabidopsis, aes(x=Sample, y=ΔCt , fill=Sample))+
geom_boxplot()+
labs(title="Boxplot de ΔCt", x="Gen", y="ΔCt")
# t.test(Peso ~ Sexo, tilapia, alternative = c("two.sided"), var.equal=TRUE)
Arabidopsis <- read_excel("dat_Arabidopsis.xlsx")
ggplot(Arabidopsis, aes(x=Sample, y=ΔCt , fill=Sample))+
geom_boxplot()+
labs(title="Boxplot de ΔCt", x="Gen", y="ΔCt")
# t.test(Peso ~ Sexo, tilapia, alternative = c("two.sided"), var.equal=TRUE)
Arabidopsis <- read_excel("dat_Arabidopsis.xlsx")
ggplot(Arabidopsis, aes(x=Sample, y=ΔCt , fill=Sample))+
geom_boxplot()+
labs(title="Boxplot de ΔCt", x="Muestra", y="ΔCt")
# t.test(Peso ~ Sexo, tilapia, alternative = c("two.sided"), var.equal=TRUE)
Arabidopsis <- read_excel("dat_Arabidopsis.xlsx")
ggplot(Arabidopsis, aes(x=Sample, y=ΔCt , fill=Sample))+
geom_boxplot()+
jitter()+
labs(title="Boxplot de ΔCt", x="Sample", y="ΔCt")
Arabidopsis <- read_excel("dat_Arabidopsis.xlsx")
ggplot(Arabidopsis, aes(x=Sample, y=ΔCt , fill=Sample))+
geom_boxplot()+
jitter(x=Sample)+
labs(title="Boxplot de ΔCt", x="Sample", y="ΔCt")
Arabidopsis <- read_excel("dat_Arabidopsis.xlsx")
ggplot(Arabidopsis, aes(x=Sample, y=ΔCt , fill=Sample))+
geom_boxplot()+
jitter(Sample)+
labs(title="Boxplot de ΔCt", x="Sample", y="ΔCt")
Arabidopsis <- read_excel("dat_Arabidopsis.xlsx")
ggplot(Arabidopsis, aes(x=Sample, y=ΔCt , fill=Sample))+
geom_boxplot()+
geom_jitter(color="#A52A2A")+
labs(title="Boxplot de ΔCt", x="Sample", y="ΔCt")
# t.test(Peso ~ Sexo, tilapia, alternative = c("two.sided"), var.equal=TRUE)
Arabidopsis <- read_excel("dat_Arabidopsis.xlsx")
ggplot(Arabidopsis, aes(x=Sample, y=ΔCt , fill=Sample))+
geom_boxplot()+
geom_jitter(color="#A52A2A")+
labs(title="Boxplot de ΔCt en Arabidopsis", x="Sample", y="ΔCt")
# t.test(Peso ~ Sexo, tilapia, alternative = c("two.sided"), var.equal=TRUE)
Arabidopsis <- read_excel("dat_Arabidopsis.xlsx")
ggplot(Arabidopsis, aes(x=Sample, y=ΔCt , fill=Sample))+
geom_boxplot()+
geom_jitter(color="#A52A2A")+
labs(title="Boxplot ΔCt Arabidopsis", x="Sample", y="ΔCt")
# t.test(Peso ~ Sexo, tilapia, alternative = c("two.sided"), var.equal=TRUE)
t.test(ΔCt ~ Sample, Arabidopsis, alternative = c("two.sided"),
var.equal=TRUE)
View(Arabidopsis)
t.test(Treatment-Control, Arabidopsis, alternative = c("two.sided"),
var.equal=TRUE)
t.test(Arabidopsis$Treatment - Arabidopsis%Control,
t.test(Arabidopsis$Treatment - Arabidopsis$Control,
alternative = c("two.sided"),
var.equal=TRUE)
Arabidopsis <- read_excel("dat_Arabidopsis.xlsx")
ggplot(Arabidopsis, aes(x=Sample, y=ΔCt , fill=Sample))+
geom_boxplot()+
geom_jitter(color="#A52A2A")+
labs(title="Boxplot ΔCt Arabidopsis", x="Sample", y="ΔCt")
# t.test(Peso ~ Sexo, tilapia, alternative = c("two.sided"), var.equal=TRUE)
t.test(ΔCt ~ Sample, Arabidopsis, alternative = c("two.sided"),
var.equal=TRUE)
test <- t.test(ΔCt ~ Sample, Arabidopsis, alternative = c("two.sided"),
var.equal=TRUE)
View(test)
test[["estimate"]]
test <- t.test(ΔCt ~ Sample, Arabidopsis,
alternative = c("two.sided"),
var.equal=TRUE)
test <- t.test(ΔCt ~ Sample, Arabidopsis,
alternative = c("two.sided"),
var.equal=TRUE)
round(2.955583 - 3.640408)
test <- t.test(ΔCt ~ Sample, Arabidopsis,
alternative = c("two.sided"),
var.equal=TRUE)
round(2.955583 - 3.640408,3)
test <- t.test(ΔCt ~ Sample, Arabidopsis,
alternative = c("two.sided"),
var.equal=TRUE)
round(2.955583 - 3.640408,4)
knitr::include_graphics("anova.png")
knitr::include_graphics("varianza-f.png")
knitr::include_graphics("testing_hyphotesis.jpeg")
View(Arabidopsis)
ggplot(Arabidopsis, aes(x=Concentration, y=ΔCt , fill=Sample))+
geom_boxplot()+
geom_jitter(color="#A52A2A")+
labs(title="Boxplot ΔCt Arabidopsis", x="Sample", y="ΔCt")
ggplot(Arabidopsis, aes(x=Concentration, y=ΔCt , fill=Concentration))+
geom_boxplot()+
geom_jitter(color="#A52A2A")+
labs(title="Boxplot ΔCt Arabidopsis", x="Sample", y="ΔCt")
ggplot(Arabidopsis, aes(x=Concentration, y=ΔCt , fill=Concentration))+
geom_jitter(color="#A52A2A")+
labs(title="Boxplot ΔCt Arabidopsis", x="Sample", y="ΔCt")
ggplot(Arabidopsis, aes(x=Concentration, y=ΔCt , Group=Sample))+
geom_jitter(color="#A52A2A")+
labs(title="Boxplot ΔCt Arabidopsis", x="Sample", y="ΔCt")
View(Arabidopsis)
View(Arabidopsis)
Arabidopsis <- read_excel("dat_Arabidopsis.xlsx")
ggplot(Arabidopsis, aes(x=Sample, y=ΔCt , fill=Sample))+
geom_boxplot()+
geom_jitter(color="#A52A2A")+
labs(title="Boxplot ΔCt Arabidopsis", x="Sample", y="ΔCt")
View(Arabidopsis)
summary(Arabidopsis)
Arabidopsis %>% select(Sample, Concentration, Ct_TG, Ct_HKG) %>% gather("Gen","Ct",3:4)
class(Arabidopsis)
Arabidopsis %>% dplyr::select(Sample, Concentration, Ct_TG, Ct_HKG) %>% gather("Gen","Ct",3:4)
tidy <- Arabidopsis %>% dplyr::select(Sample, Concentration, Ct_TG, Ct_HKG) %>% gather("Gen","Ct",3:4)
View(tidy)
tidy <- Arabidopsis %>% dplyr::select(Sample, Concentration, Ct_TG, Ct_HKG) %>% gather("Gen","Ct",3:4) %>% mutate(Factores = paste(Sample, Concentration))
View(Arabidopsis)
View(tidy)
tidy <- Arabidopsis %>% dplyr::select(Sample, Concentration, Ct_TG, Ct_HKG) %>% gather("Gen","Ct",3:4) %>% mutate(Factores = paste(Sample, Gen))
View(tidy)
knitr::opts_chunk$set(echo = FALSE)
library(readxl) # Paquete para importar datos desde excel
library(ggplot2)
library(UsingR)
library(dplyr)
library(psych) # Graficas de correlación
tidy <- Arabidopsis %>% dplyr::select(Sample, Concentration, Ct_TG, Ct_HKG) %>% gather("Gen","Ct",3:4) %>% mutate(Factores = paste(Sample, Gen))
knitr::opts_chunk$set(echo = FALSE)
library(readxl) # Paquete para importar datos desde excel
library(ggplot2)
library(UsingR)
library(dplyr)
library(psych) # Graficas de correlación
tidy <- Arabidopsis %>% dplyr::select(Sample, Concentration, Ct_TG, Ct_HKG) %>% gather("Gen","Ct",3:4) %>% mutate(Factores = paste(Sample, Gen))
knitr::opts_chunk$set(echo = FALSE)
library(readxl) # Paquete para importar datos desde excel
library(ggplot2)
library(UsingR)
library(tidyr)
library(dplyr)
library(psych) # Graficas de correlación
tidy <- Arabidopsis %>% dplyr::select(Sample, Concentration, Ct_TG, Ct_HKG) %>% gather("Gen","Ct",3:4) %>% mutate(Factores = paste(Sample, Gen))
ggplot(Arabidopsis, aes(x=Concentration, y=ΔCt , Group=Sample))+
geom_jitter(color="#A52A2A")+
labs(title="Boxplot ΔCt Arabidopsis", x="Sample", y="ΔCt")
tidy <- Arabidopsis %>% dplyr::select(Sample, Concentration, Ct_TG, Ct_HKG) %>% gather("Gen","Ct",3:4) %>% mutate(Factores = paste(Sample, Gen))
# ggplot(Arabidopsis, aes(x=Concentration, y=ΔCt , Group=Sample))+
#   geom_jitter(color="#A52A2A")+
#   labs(title="Boxplot ΔCt Arabidopsis", x="Sample", y="ΔCt")
tidyplot <- ggplot(data = Arabidopsis, aes(x = Log(Concentration), y = Ct, color = sample, shape = sample)) +
geom_point(position = position_jitter(w = 0, h = 0.1) ) +
labs(x = "Time (minutes)", y = expression(log[10]~(Concentration~microparticles~ml^-1))) +
stat_smooth(method='lm',formula=y~x, se=F) +
scale_shape_manual(values=c(1,2)) +
scale_color_brewer(palette="Set1") +
theme(legend.position= c(0.2, 0.2)) +
theme(panel.border=element_blank(), axis.line=element_line())
tidyplot
tidy <- Arabidopsis %>% dplyr::select(Sample, Concentration, Ct_TG, Ct_HKG) %>% gather("Gen","Ct",3:4) %>% mutate(Factores = paste(Sample, Gen))
# ggplot(Arabidopsis, aes(x=Concentration, y=ΔCt , Group=Sample))+
#   geom_jitter(color="#A52A2A")+
#   labs(title="Boxplot ΔCt Arabidopsis", x="Sample", y="ΔCt")
tidyplot <- ggplot(data = Arabidopsis, aes(x = log(Concentration), y = Ct, color = sample, shape = sample)) +
geom_point(position = position_jitter(w = 0, h = 0.1) ) +
labs(x = "Time (minutes)", y = expression(log[10]~(Concentration~microparticles~ml^-1))) +
stat_smooth(method='lm',formula=y~x, se=F) +
scale_shape_manual(values=c(1,2)) +
scale_color_brewer(palette="Set1") +
theme(legend.position= c(0.2, 0.2)) +
theme(panel.border=element_blank(), axis.line=element_line())
tidyplot
View(Arabidopsis)
View(tidy)
tidy <- Arabidopsis %>% dplyr::select(Sample, Concentration, Ct_TG, Ct_HKG) %>% gather("Gen","Ct",3:4) %>% mutate(Factores = paste(Sample, Gen))
# ggplot(Arabidopsis, aes(x=Concentration, y=ΔCt , Group=Sample))+
#   geom_jitter(color="#A52A2A")+
#   labs(title="Boxplot ΔCt Arabidopsis", x="Sample", y="ΔCt")
tidyplot <- ggplot(data = tidy, aes(x = log(Concentration), y = Ct, color = sample, shape = sample)) +
geom_point(position = position_jitter(w = 0, h = 0.1) ) +
labs(x = "Time (minutes)", y = expression(log[10]~(Concentration~microparticles~ml^-1))) +
stat_smooth(method='lm',formula=y~x, se=F) +
scale_shape_manual(values=c(1,2)) +
scale_color_brewer(palette="Set1") +
theme(legend.position= c(0.2, 0.2)) +
theme(panel.border=element_blank(), axis.line=element_line())
tidyplot
tidy <- Arabidopsis %>% dplyr::select(Sample, Concentration, Ct_TG, Ct_HKG) %>% gather("Gen","Ct",3:4) %>% mutate(Factores = paste(Sample, Gen))
# ggplot(Arabidopsis, aes(x=Concentration, y=ΔCt , Group=Sample))+
#   geom_jitter(color="#A52A2A")+
#   labs(title="Boxplot ΔCt Arabidopsis", x="Sample", y="ΔCt")
tidyplot <- ggplot(data = tidy, aes(x = log(Concentration), y = Ct, color = Factores, shape = Factores)) +
geom_point(position = position_jitter(w = 0, h = 0.1) ) +
labs(x = "Time (minutes)", y = expression(log[10]~(Concentration~microparticles~ml^-1))) +
stat_smooth(method='lm',formula=y~x, se=F) +
scale_shape_manual(values=c(1,2)) +
scale_color_brewer(palette="Set1") +
theme(legend.position= c(0.2, 0.2)) +
theme(panel.border=element_blank(), axis.line=element_line())
tidyplot
tidy <- Arabidopsis %>% dplyr::select(Sample, Concentration, Ct_TG, Ct_HKG) %>% gather("Gen","Ct",3:4) %>% mutate(Factores = paste(Sample, Gen))
# ggplot(Arabidopsis, aes(x=Concentration, y=ΔCt , Group=Sample))+
#   geom_jitter(color="#A52A2A")+
#   labs(title="Boxplot ΔCt Arabidopsis", x="Sample", y="ΔCt")
tidyplot <- ggplot(data = tidy, aes(x = log(Concentration), y = Ct, color = Factores, shape = Factores)) +
geom_point(position = position_jitter(w = 0, h = 0.1) ) +
labs(x = "Time (minutes)", y = expression(log[10]~(Concentration~microparticles~ml^-1))) +
stat_smooth(method='lm',formula=y~x, se=F) +
scale_shape_manual(values=c(1,2,3,4)) +
scale_color_brewer(palette="Set1") +
theme(legend.position= c(0.2, 0.2)) +
theme(panel.border=element_blank(), axis.line=element_line())
tidyplot
ggplot(tidy, aes(x=Factores, y=Ct , fill=Factores))+
geom_boxplot()+
geom_jitter(color="#A52A2A")+
labs(title="Boxplot ΔCt Arabidopsis", x="Sample", y="ΔCt")
library(readxl)
dat_hps70 <- read_excel("dat_hps70.xlsx")
View(dat_hps70)
View(dat_hps70)
summary(dat_hps70 )
ggplot(dat_hps70, aes(x=Treatment, y=∆Ct , fill=Treatment))+
dat_hps70 <- read_excel("dat_hps70.xlsx")
ggplot(dat_hps70, aes(x=Treatment, y=deltaCt , fill=Treatment))+
geom_boxplot()+
geom_jitter(color="#A52A2A")+
labs(title="Boxplot ΔCt Arabidopsis", x="Sample", y="ΔCt")
dat_hps70 <- read_excel("dat_hps70.xlsx")
ggplot(dat_hps70, aes(x=Treatment, y=deltaCt , fill=Treatment))+
geom_boxplot()+
geom_jitter(color="#A52A2A")+
labs(title="Boxplot ΔCt Larimichthys crocea", x="Treatment", y="ΔCt")
res.aov <- lm(deltaCt ~ Treatment, data = dat_hps70)
anova(res.aov)
fit_anova <- aov(res.aov)
tk <- TukeyHSD(fit_anova)
tidy(tk) %>% kable(caption = "Prueba de Tukey.", digits=2,
col.names=c("Trat.","Contraste", "H0",
"Diferencia", "IC-bajo","IC-alto",
"p-ajustado"))
knitr::opts_chunk$set(echo = FALSE)
library(readxl) # Paquete para importar datos desde excel
library(ggplot2)
library(UsingR)
library(tidyr)
library(dplyr)
library(psych) # Graficas de correlación
library(knitr)
tidy(tk) %>% kable(caption = "Prueba de Tukey.", digits=2,
col.names=c("Trat.","Contraste", "H0",
"Diferencia", "IC-bajo","IC-alto",
"p-ajustado"))
knitr::opts_chunk$set(echo = FALSE)
library(readxl) # Paquete para importar datos desde excel
library(ggplot2)
library(UsingR)
library(tidyr)
library(dplyr)
library(psych) # Graficas de correlación
library(knitr)
library(broom)
tidy(tk) %>% kable(caption = "Prueba de Tukey.", digits=2,
col.names=c("Trat.","Contraste", "H0",
"Diferencia", "IC-bajo","IC-alto",
"p-ajustado"))
# Importa base de datos de CT de HK gene de Nogal en formato MESSY
nogal <- read_excel("hkg_nogal.xlsx",
col_types = c("text", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
# Correlación entre muestras
pairs.panels(nogal[3:4])
knitr::opts_chunk$set(echo = FALSE)
library(readxl) # Paquete para importar datos desde excel
library(ggplot2)
library(UsingR)
knitr::opts_chunk$set(echo = FALSE)
library(readxl) # Paquete para importar datos desde excel
library(ggplot2)
library(UsingR)
install.packages("Hmisc")
library(Hmisc)
knitr::opts_chunk$set(echo = FALSE)
library(readxl) # Paquete para importar datos desde excel
library(ggplot2)
library(UsingR)
knitr::opts_chunk$set(echo = FALSE)
library(readxl) # Paquete para importar datos desde excel
library(ggplot2)
library(tidyr)
library(dplyr)
library(psych) # Graficas de correlación
library(knitr)
library(broom)
Arabidopsis <- read_excel("dat_Arabidopsis.xlsx")
ggplot(Arabidopsis, aes(x=Sample, y=ΔCt , fill=Sample))+
geom_boxplot()+
geom_jitter(color="#A52A2A")+
labs(title="Boxplot ΔCt Arabidopsis", x="Sample", y="ΔCt")
knitr::include_graphics("problema.png")
dat_hps70 <- read_excel("dat_hps70.xlsx")
ggplot(dat_hps70, aes(x=Treatment, y=deltaCt , fill=Treatment))+
geom_boxplot()+
geom_jitter(color="#A52A2A")+
labs(title="Boxplot delta Ct Larimichthys crocea", x="Treatment", y="delta Ct")
res.aov <- lm(deltaCt ~ Treatment, data = dat_hps70)
anova(res.aov)
fit_anova <- aov(res.aov)
tk <- TukeyHSD(fit_anova)
tidy(tk) %>% kable(caption = "Prueba de Tukey.", digits=2,
col.names=c("Trat.","Contraste", "H0",
"Diferencia", "IC-bajo","IC-alto",
"p-ajustado"))
tidy(tk) %>% kable(caption = "Prueba de Tukey.", digits=2,
col.names=c("Trat.","Contraste", "H0",
"Dif.", "IC-bajo","IC-alto",
"p-ajus"))
knitr::opts_chunk$set(echo = FALSE)
library(readxl) # Paquete para importar datos desde excel
library(ggplot2)
library(tidyr)
library(dplyr)
library(psych) # Graficas de correlación
library(knitr)
library(broom)
cor.test(nogal$`18S rRNA`, nogal$GAPDH,
method = "pearson",
alternative = "two.sided")
test
